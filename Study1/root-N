
N <- 5000
TndDAT <- datagen(ssize = N)
# Define the sample size
n <- seq(100, N, by = 100)

# Define an empty vector to store the estimated means
estIPW_vec <- rep(NA, length(n))
estEIF_vec <- rep(NA, length(n))
estEIF2_vec <- rep(NA, length(n))
# Compute the estimated means for different sample sizes
for (i in 1:length(n)) {
  datind <- sample(1:N, size = n[i])
  TNDdf_train <- TndDAT[datind, ]
  est.1<-mod_IPW(TNDdf_train)
  estIPW_vec[i] <- est.1$est
  
  est.2 <- mod_EIF(TNDdf_train, deWet = "Out")
  estEIF_vec[i] <- est.2$est
  
  est.3 <- mod_EIF2(TNDdf_train)
  estEIF2_vec[i] <- est.3$est
}

# Compute the root-n scaled biases
bias.ipw <- (estIPW_vec - mRR.em1) / sqrt(n)
bias.eif <- (estEIFvec - mRR.em1) / sqrt(n)
bias.eif2 <- (estEIF2_vec - mRR.em1) / sqrt(n)

# Plot the root-n scaled biases as a function of sample size
plot(n, bias.eif , type = "l", col = "blue",
     xlab = "Sample size (n)", ylab = "Root-n scaled bias", ylim = c(-0.4, 0.4))
lines(n, bias.eif2, type = "l", col = "red")
abline(h = 0, lty = 2)
legend("bottomright", legend = c("EIF", "EIFW"), col = c("blue", "red"), lty = 1)
title("Root-n Consistency of Estimators for mRR")

